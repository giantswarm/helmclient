version: 2.1

orbs:
  integration-test:
    executors:
      machine-executor:
        machine: true
    commands:
      install-go:
        steps:
          - run:
              name: "Remove old Go"
              command: |
                sudo rm -rf /usr/local/go
          - run:
              name: "Download Go"
              command: |
                wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
          - run:
              name: "Check downloaded Go checksum"
              command: |
                [[ "$(sha256sum go1.13.4.linux-amd64.tar.gz | cut -d ' ' -f 1)" == "692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c" ]]
          - run:
              name: "Install Go"
              command: |
                sudo tar -C /usr/local -xzf go1.13.4.linux-amd64.tar.gz
          - run:
              name: "Set go environtment"
              command: |
                go env -w GOBIN=/home/circleci/.go_workspace/bin
          - run:
              name: "Create $GOPATH directory"
              command: |
                sudo mkdir $(go env GOPATH) && sudo chown $USER $(go env GOPATH)
          - run:
              name: "Remove downloaded Go files"
              command: |
                rm go1.13.4.linux-amd64.tar.gz
          - run: 
              name: "Check Go version"
              command: |
                go version

      create-cluster:
        steps:
          - run:
              name: "Install kind"
              command: |
                CGO_ENABLED=0 GO111MODULE="on" go get sigs.k8s.io/kind@v0.7.0
          - run:
              name: "Create cluster"
              command: |
                kind create cluster --image quay.io/giantswarm/kind-node:$KUBERNETES_VERSION

      go-test:
        parameters:
          env:
            type: string
          test-dir:
            type: string
        steps:
          - run:
              name: "Create .env file"
              command: |
                echo '<< parameters.env >>' | sed -e 's/^\(.\)/export \1/' > .env
          - run:
              name: "Display .env file"
              command: |
                cat .env
          - run:
              # TODO remove this part after switch to Go modules.
              name: "Move code to $GOPATH"
              command: |
                mkdir -p $GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME} && mv ~/project $GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
          - run:
              name: "Run test"
              command: |
                cd $GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} && source .env && CGO_ENABLED=0 E2E_KUBECONFIG=$(kind get kubeconfig) go test -v -tags k8srequired << parameters.test-dir >>

      export-logs:
        steps:
          - run:
              name: "Export cluster logs"
              command: |
                kind export logs ./kind/logs
              when: always
          - store_artifacts:
              path: ./kind/logs
              destination: logs

    jobs:
      empty-test:
        environment:
          GOPATH: /go
          KUBERNETES_VERSION: v1.16.3
        parameters:
          env:
            default: ""
            description: |
              Environment variables configuration. Must be in following format:

                  VAR_A="VALUE_A"
                  VAR_B="VALUE_B"
            type: string
          test-dir:
            description: "Tested package directory."
            type: string
        executor: machine-executor
        steps:
          - checkout
          - attach_workspace:
              at: .
          - install-go
          - create-cluster
          - go-test:
              env: << parameters.env >>
              test-dir: << parameters.test-dir >>
          - export-logs

workflows:
  version: 2
  build_e2e:
    jobs:
      - integration-test/empty-test:
          env: |
            TEST_DIR="./integration/test/empty"
            A=TEST
          test-dir: "./integration/test/empty"
