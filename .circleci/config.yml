e2eTest: &e2eTest
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/apprclient
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: |
        wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./e2e-harness

    - run: ./e2e-harness localkube

    - run: ./e2e-harness setup --remote=false

    - run:
        name: start CNR server
        command: |
          docker run \
                 --name cnr-server \
                 --network host \
                 -d -t quay.io/giantswarm/docker-cnr-server:v0.1.0

    - run:
        name: create package release
        command: |
          docker run \
                 --network host \
                 -v $(pwd)/integration/test/basic/fixtures/test-chart:/test-chart \
                 --entrypoint /usr/bin/appr \
                 --workdir /test-chart \
                 -t quay.io/giantswarm/docker-cnr-server:v0.1.0 \
                 push localhost:5000/giantswarm/test-chart \
                 --channel 3-2-beta

    - run: ./e2e-harness test --test-dir=integration/test/basic

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: ./e2e-harness teardown
        when: always



version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./architect
        ./architect version

    - run: ./architect build

    - deploy:
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi

  e2eTestExecution:
    <<: *e2eTest



workflows:
  version: 2
  build_e2e:
    jobs:
      - build
      - e2eTestExecution:
          requires:
          - build
